{"version":3,"sources":["./src/app/routing.module.ts","./src/app/security-services/auth.service.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/access-container/access-container.component.ts","./src/app/access-container/access-container.component.html","./src/app/reports-table/reports-table.component.ts","./src/app/reports-table/reports-table.component.html","./src/app/focus-graphv2/focus-graphv2.component.ts","./src/app/focus-graphv2/focus-graphv2.component.html","./src/app/services/ev-assembler.service.ts","./src/environments/environment.ts","./src/app/classes/RoutesPath.ts","./src/app/evaluations-table/evaluations-table.component.ts","./src/app/evaluations-table/evaluations-table.component.html","./src/app/classes/AuthServerUris.ts","./src/app/classes/EvaluationImpl.ts","./src/app/classes/LocalStorageKeys.ts","./src/app/security-services/route-guard.service.ts","./src/app/validation-alert/validation-alert.component.ts","./src/app/validation-alert/validation-alert.component.html","./src/app/classes/ReportIpl.ts","./src/app/services/ev-communication.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/evaluation-row/evaluation-row.component.ts","./src/app/evaluation-row/evaluation-row.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/classes/UserImpl.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/sandbox/sandbox.component.ts","./src/app/sandbox/sandbox.component.html","./src/app/classes/EnvURI.ts","./src/app/services/ev-data.service.ts","../node_modules/@angular/core/__ivy_ngcc__/fesm2015 lazy namespace object","./src/app/reports-detail/reports-detail.component.ts","./src/app/reports-detail/reports-detail.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main-container/main-container.component.ts","./src/app/main-container/main-container.component.html","./src/app/report-detail/report-detail.component.ts","./src/app/report-detail/report-detail.component.html","./src/app/report-row/report-row.component.ts","./src/app/report-row/report-row.component.html","./src/app/focus-form/focus-form.component.ts","./src/app/focus-form/focus-form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { SandboxComponent } from './sandbox/sandbox.component';\r\nimport { AccessContainerComponent } from './access-container/access-container.component';\r\nimport { RouteGuardService } from './security-services/route-guard.service';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainContainerComponent } from './main-container/main-container.component';\r\nimport { ReportsDetailComponent } from './reports-detail/reports-detail.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport * as routePath from './classes/RoutesPath';\r\nimport { ReportDetailComponent } from './report-detail/report-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:routePath.INDEX,\r\n    pathMatch: 'full',\r\n    redirectTo:routePath.HOME\r\n  },\r\n  {\r\n    path:routePath.HOME,\r\n    pathMatch: 'full',\r\n    component : MainContainerComponent,\r\n    canActivate:[RouteGuardService]\r\n  },\r\n  {\r\n    path:routePath.REPORTS,\r\n    component:ReportsDetailComponent,\r\n    canActivate:[RouteGuardService]\r\n  },\r\n  {\r\n    path:routePath.REPORT_CODE,\r\n    component:ReportDetailComponent,\r\n    canActivate:[RouteGuardService]\r\n  },\r\n  {\r\n    path:routePath.LOGIN,\r\n    component:AccessContainerComponent,\r\n    canActivate:[RouteGuardService]\r\n  },\r\n  {\r\n    path:routePath.REGISTER,\r\n    component:AccessContainerComponent,\r\n    canActivate:[RouteGuardService]\r\n  },\r\n  {\r\n    path:routePath.SANDBOX,\r\n    component:SandboxComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class RoutingModule { }\r\n","import { User } from './../interfaces/User';\r\nimport { EventEmitter, Injectable, Output } from '@angular/core';\r\nimport { UserImpl } from '../classes/UserImpl';\r\nimport * as uri from '../classes/AuthServerUris';\r\nimport * as keys from '../classes/LocalStorageKeys';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'\r\nimport {tap} from 'rxjs/operators';\r\n\r\n\r\n\r\nclass LoginRequest {\r\n  email : string; //TO BE UPDATED\r\n  password : string;\r\n  additionalInformations : string;\r\n}\r\n\r\nclass RegisterRequest {\r\n  username : string;\r\n  email : string;\r\n  password : string;\r\n  additionalInformations : string;\r\n}\r\n\r\ninterface  Jwt{\r\n  token : string;\r\n  tokentype: string;\r\n  expiresin : string;\r\n  username : string;\r\n  email : string;\r\n  authorities : Autority[];\r\n}\r\n\r\ninterface LoginResponse {\r\n  data : Jwt;\r\n  message : string;\r\n}\r\n\r\ninterface RegistrationRespose {\r\n  data: RegisterRequest;\r\n  message : string;\r\n}\r\n\r\ninterface Autority{\r\n  autority:string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\nprivate isUserLogged = false;\r\n@Output() userSignedIn = new EventEmitter<UserImpl>();\r\n  @Output() userSignedUp = new EventEmitter<UserImpl>();\r\n  @Output() userlogout = new EventEmitter();\r\n\r\n  constructor(private http : HttpClient) {}\r\n\r\n  isUserloggedIn(){\r\n    this.isUserLogged = !!localStorage.getItem('token');//true se esiste\r\n    return this.isUserLogged;\r\n  }\r\n  //Login\r\n  signIn(email: string, password: string){\r\n    //Chiamata con jwt\r\n    let req = new LoginRequest();\r\n    req.email = email;\r\n    req.password = password;\r\n    req.additionalInformations = \"NONE\";\r\n    return this.http.post(uri.BASE+uri.SIGN_IN, req ).pipe(tap(\r\n      //operazione pre subscribe\r\n       (payload : LoginResponse) => {\r\n          localStorage.setItem(keys.TOKEN,payload.data.token);\r\n          let user = new UserImpl();\r\n          user.username = payload.data.username;\r\n          user.email = payload.data.email;\r\n          localStorage.setItem(keys.USER,JSON.stringify(user));\r\n          this.userSignedIn.emit(user);\r\n       },\r\n       (httpResp: HttpErrorResponse) => {\r\n          alert(httpResp.message);\r\n       }\r\n    ));\r\n\r\n\r\n  }\r\n\r\n  signUp(username: string, email: string, password: string){\r\n    //Chiamata con jwt\r\n    let req = new RegisterRequest();\r\n    req.username =username;\r\n    req.password = password;\r\n    req.email = email;\r\n    req.additionalInformations=\"NONE\";\r\n    return this.http.post(uri.BASE+uri.SIGN_UP, req ).pipe(tap(\r\n      //operazione pre subscribe\r\n       (payload : RegistrationRespose) => {\r\n\r\n          let user = new UserImpl();\r\n          user.username = payload.data.username;\r\n          user.email = payload.data.email;\r\n          this.userSignedUp.emit(user);\r\n       },\r\n       (httpResp: HttpErrorResponse) => {\r\n          alert(httpResp.message);\r\n       }\r\n    ));\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    this.userlogout.emit();\r\n    this.isUserLogged = false;\r\n    return this.isUserLogged;\r\n  }\r\n\r\n  getUser() : User{\r\n    return JSON.parse(localStorage.getItem(keys.USER));\r\n  }\r\n\r\n  getToken() : String{\r\n    return localStorage.getItem(keys.TOKEN);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../security-services/auth.service';\nimport * as routesPath from '../classes/RoutesPath'\nimport { RegistrationRespose } from '../interfaces/RegistrationResponse';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(private auth:AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  //Login\n  onFormSubmit(form: NgForm){\n    let username = form.value.username;\n    let email =form.value.email;\n    let password = form.value.password;\n    if(!form.valid){\n      return false;\n    }\n    let result = this.auth.signUp(username,email,password );\n    result.subscribe(\n      (payload : RegistrationRespose) => {\n        alert(\"User \" + payload.data.username+\" registered!\");\n        this.router.navigate([routesPath.LOGIN]);\n      },\n      (error) => {\n        console.log(\"Error in register.onFormSubmit.component\")\n      }\n    );\n  }\n\n}\n","<div class=\"p-3 contentDiv rounded bg-light shadow\">\n  <div class=\"row\">\n    <div class=\"col\" *ngIf=false>\n      <h4>Registraion form</h4>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <form #form='ngForm' (ngSubmit)=\"onFormSubmit(form)\">\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input class=\"form-control\" #username=\"ngModel\"\n          type=\"username\" name=\"username\" minlength=\"3\" required ngModel >\n          <app-validation-alert [field]=username></app-validation-alert>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input class=\"form-control\" #email=\"ngModel\"\n          type=\"email\" name=\"email\" email required ngModel >\n          <app-validation-alert [field]=email></app-validation-alert>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input class=\"form-control\" #password=\"ngModel\"\n          type=\"password\" name=\"password\" minlength=\"5\" required ngModel >\n          <app-validation-alert [field]=password></app-validation-alert>\n        </div>\n        <div class=\"text-center\" >\n          <button class=\"btn btn-primary\" [disabled]=\"!form.valid\">Register</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { User } from './../interfaces/User';\nimport { Router } from '@angular/router';\nimport { AuthService } from './../security-services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as keys from '../classes/LocalStorageKeys'\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  logged = false;\n  username : String;\n\n  constructor(private auth:AuthService, private router: Router) {\n    this.auth.userSignedIn.subscribe((user: User)=>{\n      let userLS:User = JSON.parse(localStorage.getItem(keys.USER));\n      this.username = userLS.username;\n      this.logged = true;\n    });\n    auth.userlogout.subscribe(()=>{\n      this.username = \"\";\n      this.logged = false;\n    });\n   }\n\n  ngOnInit(): void {\n    this.logged = this.auth.isUserloggedIn();\n    let userLS:User = JSON.parse(localStorage.getItem(keys.USER));\n    if(this.logged && !!userLS){\n      this.username = userLS.username;\n    }\n  }\n\n  isLogged(){\n    return this.logged = this.auth.isUserloggedIn();\n  }\n\n  logout(e){\n    e.preventDefault();\n    alert(\"Logout : \" + !this.auth.logout());\n\n    this.router.navigate(['login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark sticky-top bg-dark\">\r\n  <a class=\"navbar-brand\" routerLink=\"/graph\">Focus Meter</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"/graph\" >Today</a>\r\n      </li>\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"/reports\" >Reports</a>\r\n      </li>\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"/sandbox\" >SandBox</a>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav px-3\">\r\n      <li class=\"nav-item text-nowrap\"  *ngIf=\"isLogged()\">\r\n        <a class=\"nav-link\">{{username}}</a>\r\n      </li>\r\n      <li  class=\"nav-item text-nowrap\">\r\n        <a *ngIf=isLogged() class=\"nav-link\" href=\"#\" (click)='logout($event)'>Logout</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport * as routesPath from '../classes/RoutesPath';\n\n@Component({\n  selector: 'app-access-container',\n  templateUrl: './access-container.component.html',\n  styleUrls: ['./access-container.component.css']\n})\nexport class AccessContainerComponent implements OnInit {\n\n  private path ;\n\n  constructor(private route: ActivatedRoute, private router:Router) {\n    this.path = this.route.routeConfig.path;\n   }\n\n  ngOnInit(): void {\n    this.activateTab(this.path);\n  }\n\n  loginSelected(e:Event){\n      this.router.navigate([routesPath.LOGIN]);\n  }\n\n  registrationSelected(e){\n      this.router.navigate([routesPath.REGISTER]);\n\n  }\n\n  activateTab(tab){\n    let tabElement = $(\"a.loginTab\");\n    let contentElement = $(\"app-login.loginForm\")\n    switch(tab){\n      case routesPath.LOGIN:{\n        break;\n      }\n      case routesPath.REGISTER:{\n        tabElement = $(\"a.regTab\");\n        contentElement = $(\"app-registration.regForm\")\n        break;\n      }\n    }\n    let attivo = $(\".visible\");\n    let disattivo = $(\".d-none\")\n    contentElement.removeClass(\"d-none\");\n    contentElement.addClass(\"visible\");\n    attivo.removeClass(\"visible\");\n    attivo.addClass(\"d-none\");\n\n    $(\".active\").removeClass(\"bg-light\");\n    $(\".active\").removeClass(\"active\");\n    tabElement.addClass(\"active\");\n    tabElement.addClass(\"bg-light\");\n  }\n\n}\n","<div class=\"container p-3 mb-5 col-xs-10 col-sm-8 col-md-6 col-lg-4 \">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link loginTab active bg-light\" (click)=\"loginSelected($event)\">Login</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link regTab\" (click)=\"registrationSelected($event)\">Register</a>\n    </li>\n  </ul>\n <app-login class=\"d-none loginForm\"></app-login>\n <app-registration class=\"d-none regForm\"></app-registration>\n</div>\n\n","import { EvCommunicationService } from './../services/ev-communication.service';\r\nimport { EvDataService } from './../services/ev-data.service';\r\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { Report } from '../interfaces/Report';\r\nimport { Observable } from 'rxjs';\r\nimport { ReportsResponse } from '../interfaces/ReportsResponse';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-reports-table',\r\n  templateUrl: './reports-table.component.html',\r\n  styleUrls: ['./reports-table.component.css']\r\n})\r\nexport class ReportsTableComponent implements OnInit {\r\n\r\n  @Input()reports : Report[] = new Array;\r\n  @Output('reportSelected') reportSelected = new EventEmitter<Report>();\r\n  @Output('showReport') showReport = new EventEmitter<Report>();\r\n  @Output('exportReport') exportReport = new EventEmitter<Report>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onReportSelected(report : Report){\r\n    this.reportSelected.emit(report);\r\n  }\r\n\r\n  onShowReport(report : Report){\r\n    this.showReport.emit(report);\r\n  }\r\n\r\n  onExportReport(report : Report){\r\n    this.exportReport.emit(report);\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"row justify-content-center \">\r\n  <h4 cass=\"\">Table</h4>\r\n</div> -->\r\n<div class=\"tableFixHead responsiveText\">\r\n<table class=\"table table-striped table\">\r\n  <thead class=\"thead-dark\">\r\n  <tr>\r\n    <th class=\"p-1\">\r\n      Code\r\n    </th>\r\n    <th class=\"p-1\">\r\n      Day\r\n    </th>\r\n    <th class=\"p-1\">\r\n      Focus avg.\r\n    </th>\r\n    <th class=\"p-1\">\r\n      Actions\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr app-report-row *ngFor='let report of reports' [report-data]='report'\r\n    (reportSelected)='onReportSelected($event)'\r\n    (showReportClick)='onShowReport($event)'\r\n    (exportReportClick)='onExportReport($event)'\r\n  ></tr>\r\n  </tbody>\r\n</table>\r\n</div>\r\n","import { Report } from './../interfaces/Report';\r\nimport { Input, SimpleChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { OnChanges } from '@angular/core';\r\nimport { EvAssemblerService } from '../services/ev-assembler.service';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-focus-graphv2',\r\n  templateUrl: './focus-graphv2.component.html',\r\n  styleUrls: ['./focus-graphv2.component.css']\r\n})\r\nexport class FocusGraphv2Component implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input('report') report : Report;\r\n  @Output() graphLoadingError = new EventEmitter<String>();\r\n  @Output() graphDrew = new EventEmitter<Report>();\r\n  @Output() graphRefreshed = new EventEmitter<Report>();\r\n  @Output() graphChanged = new EventEmitter<Report>();\r\n  @Output() evaluationAdded = new EventEmitter<Report>();\r\n\r\n  func  = ()=>{\r\n    this.drawDottedFocusChart();\r\n  }\r\n  message : String = \"Please add an evaluation or load a Report!\";\r\n  private loadedPromise: any;\r\n  private chart: google.visualization.LineChart;\r\n  private data: google.visualization.DataTable;\r\n  private options: google.visualization.LineChartOptions = {\r\n    chartArea: {left: 10,right:10,top:10,bottom:50},\r\n      hAxis: {format:'HH:mm:ss'},\r\n      vAxis:{viewWindow:{\r\n        max:10,\r\n        min:0\r\n    }},\r\n      colors: ['#ff5767'],\r\n      pointSize: 5,\r\n      pointShape: 'circle',\r\n      legend: { position: 'bottom'},\r\n      height: screen.height/2.5,\r\n      explorer: {\r\n        actions: ['dragToZoom', 'rightClickToReset'],\r\n        axis: 'horizontal',\r\n        keepInBounds: true,\r\n        maxZoomIn: 20.0,\r\n        zoomDelta:2.0\r\n      }\r\n  };\r\n  graphTitle : String = \"No report\";\r\n\r\n\r\n  constructor(private assembler : EvAssemblerService) { }\r\n  ngOnDestroy(): void {\r\n    window.removeEventListener('resize',this.func, false);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    for (const propName in changes) {\r\n      const chng = changes[propName];\r\n      let cur  = JSON.stringify(chng.currentValue);\r\n      let prev = JSON.stringify(chng.previousValue);\r\n      console.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\r\n      this.message = '';\r\n      if(chng.currentValue == null && chng.previousValue == null){\r\n        this.message=\"Please add the first evaluation or load a Report\";\r\n      }else if(chng.previousValue == null && chng.currentValue !=null){\r\n        this.initChart();\r\n      }else if(chng.previousValue != null && chng.currentValue != null){\r\n        console.log(\"refreshing graph\");\r\n        try{\r\n            this.loadReport();\r\n            if((chng.previousValue as Report).code === (chng.currentValue as Report).code){\r\n              this.graphRefreshed.emit(this.report);\r\n            }else{\r\n              this.graphChanged.emit(this.report);\r\n            }\r\n        }catch(err){\r\n          alert(err);\r\n          this.chart.clearChart();\r\n          this.message=\"Error!\"\r\n        }\r\n      }else if(chng.previousValue != null && chng.currentValue==null){\r\n        this.chart.clearChart();\r\n        this.message=\"Please add the first evaluation or load a Report\";\r\n      }else{\r\n        this.message=\"Error!\"\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    window.addEventListener('resize',this.func, false);\r\n\r\n  }\r\n\r\n  refreshGraph(){\r\n    console.log(this.data);\r\n  }\r\n\r\n  initChart(){\r\n    this.loadedPromise = google.charts.load(\"current\", {packages: ['corechart']});\r\n    this.message=\"Graph loading ...\"\r\n    this.loadedPromise\r\n    .then(() => {\r\n      console.log(\"Google Visualization API is loaded.\");\r\n      this.message =\"\";\r\n      this.loadReport();\r\n    })\r\n    .catch((err) => {\r\n      this.message =\"Error in loading\";\r\n      alert(\"Error during loading package: \" + err);\r\n      this.graphLoadingError.emit(\"Error during loading package: \" + err);\r\n    });\r\n  }\r\n\r\n  loadReport(){\r\n    this.data = this.assembler.getDataTable(this.report,'Time','Focus');\r\n    this.drawDottedFocusChart();\r\n    console.log(\"Report loaded: \"+this.report.code);\r\n  }\r\n\r\n  //https://developers.google.com/chart/interactive/docs/gallery/linechart\r\n  drawDottedFocusChart() : void {\r\n    console.log(\"draw chart\");\r\n    var containerElement = $('#chartContainer')[0];\r\n    this.chart = new google.visualization.LineChart(containerElement);\r\n\r\n    this.chart.draw(this.data, this.options);\r\n    this.graphDrew.emit(this.report);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container \">\r\n  <div id=\"graph-title\" class=\"row justify-content-center \">\r\n    <h4 *ngIf=\"report !=null; else elseBlock\">Report : {{report.code}}</h4>\r\n    <ng-template #elseBlock><h4>No report</h4></ng-template>\r\n  </div>\r\n  <div class=\"row\"></div>\r\n  <div id='chartContainer' class=\"row \">\r\n  </div>\r\n  <div class=\"row justify-content-center\">\r\n    {{message}}\r\n  </div>\r\n</div>\r\n","import { EvaluationImpl } from './../classes/EvaluationImpl';\r\nimport { Evaluation } from './../interfaces/Evaluation';\r\nimport { Report } from './../interfaces/Report';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EvAssemblerService {\r\n\r\n  constructor() { }\r\n\r\n  getDataTable(repo : Report, xTitle : string,yTitle : string) : google.visualization.DataTable{\r\n    if(repo != null && repo.evaluations !=null && repo.evaluations.length>0){\r\n      var data : any[] = [[xTitle, yTitle]];\r\n      repo.evaluations.forEach(element => {\r\n        data.push(this.getEvaluationRow(element));\r\n      });\r\n      return google.visualization.arrayToDataTable(data);\r\n    }else if(repo == null){\r\n      throw new Error(\"Report is null.\");\r\n    }else if(repo.evaluations==null || repo.evaluations.length<1){\r\n      throw new Error(\"Evaluations array is empty.\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getEvaluationRow(ev : Evaluation) {\r\n    let date = new Date(ev.timestamp);\r\n    return [[date.getHours(), date.getMinutes(), date.getSeconds()],ev.value];\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export const INDEX = \"\",\r\nHOME = \"graph\",\r\nREPORTS = \"reports\",\r\nREPORT_CODE = \"reports/:code\",\r\nLOGIN =\"login\",\r\nREGISTER=\"register\",\r\nSANDBOX=\"sandbox\"\r\n","import { EvDataService } from './../services/ev-data.service';\nimport { Evaluation } from './../interfaces/Evaluation';\nimport { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { Report } from '../interfaces/Report';\nimport * as $ from 'jquery';\nimport { Output } from '@angular/core';\nimport { OnChanges } from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\n@Component({\n  selector: 'app-evaluations-table',\n  templateUrl: './evaluations-table.component.html',\n  styleUrls: ['./evaluations-table.component.css']\n})\nexport class EvaluationsTableComponent implements OnInit,OnChanges {\n\n  @Input() report : Report;\n  evaluations : Evaluation[];\n  @Output() evalSelected = new EventEmitter<Evaluation>();\n\n  constructor() {\n\n   }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    for (const propName in changes) {\n      const chng = changes[propName];\n      let cur  = JSON.stringify(chng.currentValue);\n      let prev = JSON.stringify(chng.previousValue);\n      console.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\n      if(this.report!=null){\n        this.evaluations = this.report.evaluations;\n      }\n    }\n\n  }\n\n  onEvaluationSelected(ev : Evaluation){\n    this.evalSelected.emit(ev);\n  }\n\n\n\n}\n","<div class=\"tableFixHead responsiveText\">\n<table id='table-evaluations' class=\"table table-striped \" >\n    <thead class=\"thead-dark\">\n      <tr>\n        <th class=\"p-1\">Code</th>\n        <th class=\"p-1\">Time</th>\n        <th class=\"p-1\">Value</th>\n        <th class=\"p-1\">Notes</th>\n        <th class=\"p-1\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr app-evaluation-row *ngFor='let evaluation of evaluations' [evaluation]='evaluation'\n        (rowSelected) = 'onEvaluationSelected($event)'\n      ></tr>\n    </tbody>\n\n</table>\n</div>\n","import * as env from '../classes/EnvURI';\r\nexport const BASE=env.ENV+\"/api/auth/\",\r\nSIGN_IN=\"login\", SIGN_UP=\"register\"\r\n","import { Evaluation } from './../interfaces/Evaluation';\r\nexport class EvaluationImpl implements Evaluation{\r\n  timestamp: Date;\r\n  code: string;\r\n  value: number;\r\n  notes: string;\r\n  report : string;\r\n  userEmail : string;\r\n}\r\n","export const TOKEN = 'token', USER = 'user';\r\n","import { AuthService } from './auth.service';\nimport * as routePath from './../classes/RoutesPath';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RouteGuardService implements CanActivate{\n\n  accessGaranted = false;\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    let path = state.root.firstChild.routeConfig.path;\n    console.log(\"Request to go to: /\"+path);//Route(url:'', path:''),Route(url:'graph', path:'graph')\n    switch(path){\n      case routePath.HOME: {\n        this.checkAuthentication();\n        break;\n      }\n      case routePath.REPORTS: {\n        this.checkAuthentication();\n        break;\n      }\n      case routePath.REPORT_CODE: {\n        this.checkAuthentication();\n        break;\n      }\n      case routePath.LOGIN:{\n        this.accessGaranted = true;\n        break;\n      }\n      case routePath.REGISTER:{\n        this.accessGaranted = true;\n        break;\n      }\n      default:{\n        alert(\"Route not managed\")\n        this.router.navigate([routePath.LOGIN]);\n        this.accessGaranted=false;\n        break;\n      }\n\n\n    }\n    return this.accessGaranted;\n  }\n  checkAuthentication() {\n    if(this.auth.isUserloggedIn()){\n      this.accessGaranted = true;\n    }else{\n      alert(\"Please Login first.\")\n      this.router.navigate([routePath.LOGIN]);\n      this.accessGaranted=false;\n    }\n\n  }\n\n}\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-validation-alert',\n  templateUrl: './validation-alert.component.html',\n  styleUrls: ['./validation-alert.component.css']\n})\nexport class ValidationAlertComponent implements OnInit {\n\n  @Input() field : NgModel;\n\n  public REQUIRED : String;\n  public EMAIL: String;\n  public MINLENGTH: String;\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n    this.REQUIRED ='The field '+this.field.name+' is required.';\n    this.EMAIL ='This email address is invalid.';\n    this.MINLENGTH = 'The min length in characters is : ';\n  }\n\n  getMinLengthMsg(){\n    return this\n  }\n\n}\n","<div class=\"validationTip\" *ngIf='field.invalid && field.dirty'>\n  <div class=\"alert-danger\" *ngIf=\"field.errors.required\">{{REQUIRED}}</div>\n  <div class=\"alert-danger\" *ngIf=\"field.errors.email\">{{EMAIL}}</div>\n  <div class=\"alert-danger\" *ngIf=\"field.errors.minlength\">{{MINLENGTH}}{{field.errors.minlength.requiredLength}}</div>\n</div>\n","import { Evaluation } from '../interfaces/Evaluation';\r\nimport { Report } from './../interfaces/Report';\r\nexport class ReportIpl implements Report{\r\n  code: string;\r\n  day: Date;\r\n  evaluations: Evaluation[];\r\n  user: string;\r\n}\r\n","import { Report } from './../interfaces/Report';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EvCommunicationService {\r\n\r\n  //OBservable\r\n  private reloadReportSource = new Subject<Report>();\r\n\r\n  reloadReport$ = this.reloadReportSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  reloadReport(repo : Report){\r\n    this.reloadReportSource.next(repo);\r\n  }\r\n}\r\n","import { EvDataService } from './services/ev-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Report } from './interfaces/Report';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  ngOnInit(): void {\n  }\n  title = 'FocusMeter';\n}\n","<app-nav-bar></app-nav-bar>\n<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Evaluation } from './../interfaces/Evaluation';\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'tr[app-evaluation-row]',\n  templateUrl: './evaluation-row.component.html',\n  styleUrls: ['./evaluation-row.component.css']\n})\nexport class EvaluationRowComponent implements OnInit {\n  @Input('evaluation') evaluation : Evaluation;\n  @Output('rowSelected') rowSelected = new EventEmitter<Evaluation>()\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onRowSelected(){\n    this.rowSelected.emit(this.evaluation);\n  }\n\n}\n","\r\n<td>\r\n  <a class='btn btn-outline-dark btn-sm responsiveText' (click)='onRowSelected()'>\r\n    {{evaluation.code}}\r\n  </a></td>\r\n<td class=\"responsiveText\">{{evaluation.timestamp | date:'HH:mm:ss'}}</td>\r\n<td class=\"responsiveText\">{{evaluation.value}}</td>\r\n<td class=\"responsiveText\">{{evaluation.notes}}</td>\r\n<td class=\"responsiveText\">!</td>\r\n","import { RoutingModule } from './routing.module';\r\nimport { ReportsDetailComponent } from './reports-detail/reports-detail.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { AppComponent } from './app.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { MainContainerComponent } from './main-container/main-container.component';\r\nimport { FocusFormComponent } from './focus-form/focus-form.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { ReportsTableComponent } from './reports-table/reports-table.component';\r\nimport { ReportRowComponent } from './report-row/report-row.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { ReportDetailComponent } from './report-detail/report-detail.component';\r\nimport { EvaluationsTableComponent } from './evaluations-table/evaluations-table.component';\r\nimport { EvaluationRowComponent } from './evaluation-row/evaluation-row.component';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ValidationAlertComponent } from './validation-alert/validation-alert.component';\r\nimport { AccessContainerComponent } from './access-container/access-container.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SandboxComponent } from './sandbox/sandbox.component';\r\nimport { FocusGraphv2Component } from './focus-graphv2/focus-graphv2.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    HeaderComponent,\r\n    MainContainerComponent,\r\n    FocusFormComponent,\r\n    FooterComponent,\r\n    ReportsDetailComponent,\r\n    ReportsTableComponent,\r\n    ReportRowComponent,\r\n    ReportDetailComponent,\r\n    EvaluationsTableComponent,\r\n    EvaluationRowComponent,\r\n    LoginComponent,\r\n    ValidationAlertComponent,\r\n    AccessContainerComponent,\r\n    RegistrationComponent,\r\n    SandboxComponent,\r\n    FocusGraphv2Component\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    GoogleChartsModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    RoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [HttpClientModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex justify-content-center flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom Zlevel\">\r\n  <h1 class=\"h2\">Focus Meter</h1>\r\n</div>\r\n","import {User} from '../interfaces/User';\r\n\r\nexport class UserImpl implements User{\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=''>\n  <small>Created by Giuseppe D'Agostino</small>\n</div>\n","import { EvaluationImpl } from './../classes/EvaluationImpl';\r\nimport { UserImpl } from './../classes/UserImpl';\r\nimport { Report } from './../interfaces/Report';\r\nimport { ReportIpl } from '../classes/ReportIpl';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Evaluation } from '../interfaces/Evaluation';\r\n\r\n@Component({\r\n  selector: 'app-sandbox',\r\n  templateUrl: './sandbox.component.html',\r\n  styleUrls: ['./sandbox.component.css']\r\n})\r\nexport class SandboxComponent implements OnInit {\r\n\r\n  currentReport : Report;\r\n  private evIndex = 1;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  changeReport(){\r\n    let user = new UserImpl();\r\n    user.email=\"beppe@prova.com\";\r\n    user.username=\"beppe\";\r\n    user.password=\"prova001\";\r\n    let ev = new EvaluationImpl();\r\n    ev.code = \"E00001\";\r\n    ev.notes = \"Non mi va.\"\r\n    ev.report =\"R00001\";\r\n    ev.timestamp = new Date();\r\n    ev.userEmail = user.email;\r\n    ev.value = 4;\r\n    let evaluations : Evaluation[] = [ev];\r\n    let report = new ReportIpl();\r\n    report.code = \"R00001\"\r\n    report.day=new Date();\r\n    report.evaluations = evaluations;\r\n    report.user = user.email;\r\n    this.currentReport = report;\r\n  }\r\n\r\n  changeReport2(){\r\n    let user = new UserImpl();\r\n    user.email=\"beppe@prova.com\";\r\n    user.username=\"beppe\";\r\n    user.password=\"prova001\";\r\n    let ev = new EvaluationImpl();\r\n    ev.code = \"E00001\";\r\n    ev.notes = \"Sono carico.\"\r\n    ev.report =\"R00002\";\r\n    ev.timestamp = new Date();\r\n    ev.userEmail = user.email;\r\n    ev.value = 8;\r\n    let ev2 = new EvaluationImpl();\r\n    ev2.code = \"E0000\"+(++this.evIndex);\r\n    ev2.notes = \"Bah.\"\r\n    ev2.report =\"R00002\";\r\n    ev2.timestamp = new Date();\r\n    ev2.userEmail = user.email;\r\n    ev2.value = 6;\r\n    let evaluations : Evaluation[] = [ev,ev2];\r\n    let report = new ReportIpl();\r\n    report.code = \"R00002\"\r\n    report.day=new Date();\r\n    report.evaluations = evaluations;\r\n    report.user = user.email;\r\n    this.currentReport = report;\r\n  }\r\n\r\n  changeReportNull(){\r\n    this.currentReport = null;\r\n  }\r\n\r\n  addEvaluation(){\r\n    if(this.currentReport!=null){\r\n      let ev = new EvaluationImpl();\r\n      this.evIndex++;\r\n      ev.code = \"E0000\"+this.evIndex;\r\n      ev.notes = \"Sono carico.\"\r\n      ev.report =this.currentReport.code;\r\n      ev.timestamp = new Date();\r\n      ev.userEmail = this.currentReport.user;\r\n      ev.value = 5;\r\n      this.currentReport.evaluations.push(ev);\r\n      this.currentReport = Object.assign({}, this.currentReport);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class='row justify-content-center'>\r\n    <h3>SandBox</h3>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <app-focus-graphv2 [report]=currentReport></app-focus-graphv2>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <button (click)=\"changeReport()\">Change Report</button>\r\n    <button (click)=\"changeReport2()\">Change Report 2</button>\r\n    <button (click)=\"changeReportNull()\">Change Report null</button>\r\n    <button (click)=\"addEvaluation()\">Add Evaluation</button>\r\n\r\n  </div>\r\n\r\n</div>\r\n","export const DEV=\"http://localhost:8081\",\r\nPROD=\"https://focus-meter.herokuapp.com\",ENV=PROD\r\n","\r\nimport { AuthService } from './../security-services/auth.service';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Report } from './../interfaces/Report';\r\nimport { Evaluation } from './../interfaces/Evaluation';\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ReportsResponse } from '../interfaces/ReportsResponse';\r\nimport { ENV } from '../classes/EnvURI';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EvDataService {\r\n  today = new Date();\r\n  increment = 0;\r\n  constructor(private http: HttpClient, private auth:AuthService) {\r\n  }\r\n\r\n  getReports() :  Observable<ReportsResponse>{\r\n    const userEmail = this.auth.getUser().email;\r\n    let observable :Observable<ReportsResponse> ;\r\n    observable = this.http.get(ENV+\"/api/\"+userEmail+\"/reports\",{\r\n      headers: this.getHeaders()\r\n    }\r\n\r\n    ).pipe(tap(\r\n      (payload : ReportsResponse)=>{\r\n        // alert(JSON.stringify(payload));\r\n      },\r\n      (error : HttpErrorResponse)=>{\r\n        alert(error.message);\r\n      }\r\n    ));\r\n    return observable;\r\n  }\r\n\r\n  getTodayReport():Observable<Report>{\r\n    const userEmail = this.auth.getUser().email;\r\n    let observable : Observable<Report> = this.http.get(ENV+\"/api/\"+userEmail+\"/reports/today\",{\r\n      headers: this.getHeaders()\r\n    }\r\n\r\n    ).pipe(tap(\r\n      (payload : Report)=>{\r\n        // alert(JSON.stringify(payload));\r\n      },\r\n      (error : HttpErrorResponse)=>{\r\n        alert(error.message);\r\n      }\r\n    ));\r\n    return observable;\r\n  }\r\n\r\n  getReportByCode(code :string){\r\n    const userEmail = this.auth.getUser().email;\r\n    let observable : Observable<Report> = this.http.get(ENV+\"/api/\"+userEmail+\"/reports/\"+code,{\r\n      headers: this.getHeaders()\r\n    }\r\n\r\n    ).pipe(tap(\r\n      (payload : Report)=>{\r\n        // alert(JSON.stringify(payload));\r\n      },\r\n      (error : HttpErrorResponse)=>{\r\n        alert(error.message);\r\n      }\r\n    ));\r\n    return observable;\r\n  }\r\n\r\n  addEvaluation(ev : Evaluation) : Observable<Report>{\r\n    let observable : Observable<Report> = this.http.post(ENV+\"/api/evaluations/add\", ev,{\r\n      headers: this.getHeaders()\r\n    }\r\n\r\n    ).pipe(tap(\r\n      (payload : Report)=>{\r\n        //FAI QULCOSA\r\n      },\r\n      (error : HttpErrorResponse)=>{\r\n        alert(error.message);\r\n      }\r\n    ));\r\n    return observable;\r\n  }\r\n\r\n  getHeaders(): HttpHeaders{\r\n    // alert(this.auth.getToken());\r\n    let headers = new HttpHeaders(\r\n      {\r\n        Authorization : ''+this.auth.getToken()\r\n      }\r\n    );\r\n    return headers;\r\n}\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"q4w8\";","import { Router } from '@angular/router';\r\nimport { ReportsResponse } from './../interfaces/ReportsResponse';\r\nimport { EvDataService } from './../services/ev-data.service';\r\nimport { Component, OnInit, Output } from '@angular/core';\r\nimport { Report } from '../interfaces/Report';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-reports-detail',\r\n  templateUrl: './reports-detail.component.html',\r\n  styleUrls: ['./reports-detail.component.css']\r\n})\r\nexport class ReportsDetailComponent implements OnInit {\r\n\r\n  selectedReport : Report;\r\n  reports : Report[];\r\n\r\n\r\n  constructor(private dataService : EvDataService, private route : Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    var getTodayObs: Observable<Report>= this.dataService.getTodayReport();\r\n    getTodayObs.subscribe(\r\n      (payload:Report) => {\r\n        this.selectedReport = payload;\r\n      },\r\n      (error : HttpErrorResponse) =>{\r\n        alert(\"Error in adding evaluation: \"+error.message);\r\n      });\r\n      var getReportsObs: Observable<ReportsResponse>= this.dataService.getReports();\r\n      getReportsObs.subscribe(\r\n        (payload:ReportsResponse) => {\r\n          this.reports = payload.reports;\r\n        },\r\n        (error : HttpErrorResponse) =>{\r\n          alert(\"Error in adding evaluation: \"+error.message);\r\n        });\r\n  }\r\n\r\n  reportSelected(report : Report){\r\n    this.selectedReport = report;\r\n    this.route.navigate(['reports', this.selectedReport.code])\r\n  }\r\n\r\n  showReport(report : Report){\r\n    this.selectedReport = report;\r\n  }\r\n\r\n  exportReport(report : Report){\r\n    this.selectedReport = report;\r\n  }\r\n\r\n}\r\n","<div class=\"border-bottom container-fluid p-2\">\r\n  <div class='row justify-content-center'>\r\n    <h3 style=\"z-index: +6;\">Reports</h3>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-7\">\r\n      <app-reports-table\r\n        [reports]=\"reports\"\r\n        (reportSelected)=\"reportSelected($event)\"\r\n        (showReport)=\"showReport($event)\"\r\n        (exportReport)=\"exportReport($event)\"></app-reports-table>\r\n    </div>\r\n    <div class=\"col-sm-5\">\r\n      <app-focus-graphv2 [report]='selectedReport'\r\n        ></app-focus-graphv2>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Router } from '@angular/router';\r\nimport { AuthService } from './../security-services/auth.service';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport * as routesPath from '../classes/RoutesPath'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(private auth:AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //Login\r\n  onFormSubmit(form: NgForm){\r\n    let email =form.value.email;\r\n    let password = form.value.password;\r\n    if(!form.valid){\r\n      return false;\r\n    }\r\n    this.auth.signIn(email,password ).subscribe(\r\n      (payload) => {\r\n        alert(this.auth.getUser().username+\" logged\");\r\n        alert(this.auth.getToken());\r\n        this.router.navigate([routesPath.INDEX]);\r\n      },\r\n      (error) => {\r\n        console.log(\"Error in login.onFormSubmit.component\")\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"contentDiv p-3 rounded bg-light shadow\">\n  <div class=\"row\">\n    <div class=\"col\" *ngIf=false>\n      <h4>Login form</h4>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <form #form='ngForm' (ngSubmit)=\"onFormSubmit(form)\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input class=\"form-control\" #email=\"ngModel\"\n          type=\"email\" name=\"email\" email required ngModel >\n          <app-validation-alert [field]=email></app-validation-alert>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input class=\"form-control\" #password=\"ngModel\"\n          type=\"password\" name=\"password\" minlength=\"5\" required ngModel >\n          <app-validation-alert [field]=password></app-validation-alert>\n        </div>\n        <div class=\"text-center\" >\n          <button class=\"btn btn-primary\" [disabled]=\"!form.valid\">Sign In</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Report } from './../interfaces/Report';\r\nimport { EvCommunicationService } from './../services/ev-communication.service';\r\nimport { EvDataService } from './../services/ev-data.service';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Evaluation } from '../interfaces/Evaluation';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-container',\r\n  templateUrl: './main-container.component.html',\r\n  styleUrls: ['./main-container.component.css']\r\n})\r\nexport class MainContainerComponent implements OnInit {\r\n  //binded with report property of focusGraphV2\r\n  currentRepo : Report;\r\n\r\n  constructor(private dataService : EvDataService, private comunications : EvCommunicationService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    var getTodayObs: Observable<Report>= this.dataService.getTodayReport();\r\n    getTodayObs.subscribe(\r\n      (payload:Report) => {\r\n        this.currentRepo = payload;\r\n      },\r\n      (error : HttpErrorResponse) =>{\r\n        alert(\"Error in adding evaluation: \"+error.message);\r\n      });\r\n  }\r\n\r\n  onEvaluationAdded(newReport : Report){\r\n    this.currentRepo = newReport;\r\n  }\r\n\r\n}\r\n","<div class=\"border-bottom container-fluid p-2\">\r\n  <div class='row no-gutters'>\r\n    <div class='col-sm-8 '>\r\n      <app-focus-graphv2 [report]='currentRepo'></app-focus-graphv2>\r\n    </div>\r\n    <div class='col-sm-4 '>\r\n      <app-focus-form [report]='currentRepo' (evSubmitted)='onEvaluationAdded($event)'></app-focus-form>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n</div>\r\n","import { Evaluation } from './../interfaces/Evaluation';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Report } from '../interfaces/Report';\r\nimport { EvDataService } from '../services/ev-data.service';\r\n\r\n@Component({\r\n  selector: 'app-report-detail',\r\n  templateUrl: './report-detail.component.html',\r\n  styleUrls: ['./report-detail.component.css']\r\n})\r\nexport class ReportDetailComponent implements OnInit {\r\n  report : Report;\r\n  constructor(private route: ActivatedRoute, private dataService : EvDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(\r\n      (p) => {\r\n        var getReportsObs: Observable<Report>= this.dataService.getReportByCode(p.code);\r\n        getReportsObs.subscribe(\r\n          (payload:Report) => {\r\n            this.report = payload;\r\n          },\r\n          (error : HttpErrorResponse) =>{\r\n            alert(\"Error in adding evaluation: \"+error.message);\r\n          });\r\n      });\r\n  }\r\n\r\n  reportSelected(ev : Evaluation){\r\n    console.log(\"Evaluation Selected: \" + ev.code);\r\n  }\r\n\r\n}\r\n","<div class=\"border-bottom container\">\n  <div class='row justify-content-center'>\n    <h3 *ngIf=\"report !=null; else elseBlock\">Report : {{report.code}}</h3>\n    <ng-template #elseBlock><h3>No report</h3></ng-template>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <app-evaluations-table [report]='report'\n      (evalSelected)=\"reportSelected($event)\"></app-evaluations-table>\n    </div>\n  </div>\n  <div class=\"row ml-1 mt-2\">\n    <button class=\"btn btn-primary\" routerLink='..'>Back</button>\n  </div>\n\n\n</div>\n","import { ActivatedRoute,Router } from '@angular/router';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Report } from '../interfaces/Report';\r\nimport {faChartLine,faFileDownload} from '@fortawesome/free-solid-svg-icons'\r\n@Component({\r\n  selector: 'tr[app-report-row]',\r\n  templateUrl: './report-row.component.html',\r\n  styleUrls: ['./report-row.component.css']\r\n})\r\nexport class ReportRowComponent implements OnInit {\r\n\r\n  @Input('report-data') report : Report;\r\n  @Output('reportSelected') reportSelected = new EventEmitter();\r\n  @Output('showReportClick') showReportClick = new EventEmitter();\r\n  @Output('exportReportClick') exportReportClick = new EventEmitter();\r\n\r\n  reportAverage : number;\r\n  faChartLine = faChartLine;\r\n  faFileDownload = faFileDownload;\r\n  constructor(private route:Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   this.reportAverage = this.calculateAverage();\r\n  }\r\n\r\n  calculateAverage() : number{\r\n     let sum = 0;\r\n    this.report.evaluations.forEach(element => {\r\n      sum = sum + element.value;\r\n    });\r\n    return Math.round((sum/this.report.evaluations.length)*100)/100;\r\n  }\r\n\r\n  onShowGraphClicked(){\r\n    this.showReportClick.emit(this.report);\r\n  }\r\n\r\n  onShowDetail(){\r\n    this.reportSelected.emit(this.report);\r\n    // this.route.navigate(['reports', this.report.code])\r\n  }\r\n\r\n  onExportReportClicked(){\r\n    this.exportReportClick.emit(this.report);\r\n  }\r\n\r\n}\r\n","<td><a class='btn btn-outline-dark btn-sm ' (click)='onShowDetail()'>\r\n  <p class=\"m-0 responsiveText\">{{report.code}}</p></a></td>\r\n<td>{{report.day | date:'dd/MM/yyyy'}}</td>\r\n<td>{{reportAverage | number:'.2-2'}}</td>\r\n<td>\r\n  <div class=\"row\">\r\n    <div class=\"col\" style=\"min-width: max-content;\">\r\n      <button class=\"show-graph btn-primary btn-sm\" (click)='onShowGraphClicked()'>\r\n        <fa-icon class=\"fas fa-xs\" [icon]='faChartLine'></fa-icon>\r\n      </button>\r\n      <button class=\"show-graph btn-primary btn-sm ml-1\">\r\n        <fa-icon class=\"fas fa-xs\"[icon]='faFileDownload' (click)='onExportReportClicked()'></fa-icon>\r\n      </button>\r\n      <!-- <button class=\"show-graph btn-primary btn-sm\" (click)='onShowDetail()'>\r\n        <fa-icon [icon]='faSearchPlus'></fa-icon>\r\n      </button> -->\r\n    </div>\r\n  </div>\r\n</td>\r\n","import { AuthService } from './../security-services/auth.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Report } from './../interfaces/Report';\r\nimport { Observable } from 'rxjs';\r\nimport { EvDataService } from './../services/ev-data.service';\r\nimport { EvaluationImpl } from './../classes/EvaluationImpl';\r\nimport { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport * as $ from 'jquery';\r\nimport { Output } from '@angular/core';\r\nimport { Evaluation } from '../interfaces/Evaluation';\r\n\r\n@Component({\r\n  selector: 'app-focus-form',\r\n  templateUrl: './focus-form.component.html',\r\n  styleUrls: ['./focus-form.component.css'],\r\n})\r\nexport class FocusFormComponent implements OnInit {\r\n  currentValue: number;\r\n  evaluation: EvaluationImpl;\r\n  @Input('report') todayReport : Report;\r\n  @Output() evSubmitted = new EventEmitter<Report>();\r\n\r\n  constructor(private dataService: EvDataService, private auth : AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    $('#focus-form-range').change((evt) => {\r\n      this.updateValue(Number.parseInt($(evt.currentTarget).val()));\r\n    });\r\n    //Force first time\r\n    $('#focus-form-range').trigger('change');\r\n    //on click submit\r\n    $('#focus-form').submit(() => {\r\n      this.onSubmitEv();\r\n      return false; //prevent to reload the page\r\n    });\r\n  }\r\n\r\n  updateValue(value: number) {\r\n    this.currentValue = value;\r\n    console.log('Focus val: ' + this.currentValue);\r\n    $('#focus-form-value').val(this.currentValue);\r\n  }\r\n\r\n  onSubmitEv() {\r\n    let reportCode = '';\r\n    if(this.todayReport!=null){\r\n      reportCode = this.todayReport.code;\r\n    }\r\n    let today = new Date();\r\n    today.setTime(Date.now());\r\n    this.evaluation = {\r\n      code: '',\r\n      value: this.currentValue,\r\n      timestamp: today,\r\n      notes: $('#focus-form-notes').val(),\r\n      report : reportCode,\r\n      userEmail : this.auth.getUser().email\r\n    };\r\n    //chiamata ajax tramite service\r\n    var addedObs: Observable<Report>= this.dataService.addEvaluation(this.evaluation);\r\n    addedObs.subscribe(\r\n      (payload) => {\r\n        this.todayReport = payload;\r\n        this.evSubmitted.emit(payload);\r\n      },\r\n      (error : HttpErrorResponse) =>{\r\n        alert(\"Error in adding evaluation: \"+error.message);\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class='container'>\n  <div class=\"row mb-4\">\n    <h3 cass=\"\">Evaluate you focus</h3>\n  </div>\n  <div class=\"row\">\n    <form id=\"focus-form\" action=\"#\" class=\"\">\n      <div class=\"form-row\">\n        <div class='form-group col-md-9' >\n          <input type=\"range\" class=\"form-control-range \" min=\"1\" max=\"10\" step=\"1\" id=\"focus-form-range\">\n          <small id=\"focus-form-ev-help\" class=\"form-text text-muted\">Evaluate you actual focus from 1 to 10</small>\n        </div>\n        <div class='form-group col-md-3 col-4' >\n          <input type=\"number\" class=\"form-control\" id=\"focus-form-value\">\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class='form-group col-12' >\n          <div class=\"input-group mb-2\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">Notes</div>\n            </div>\n            <input type=\"text\" id=\"focus-form-notes\" class=\"form-control\" placeholder=\"About my evaluation...\">\n          </div>\n        </div>\n      </div>\n      <div class=\"row justify-content-end mr-1\">\n        <div class=\"col-lg-4 col-md-5\">\n          <button type=\"submit\" class=\"btn btn-primary form-control \" id=\"focus-form-submit\">Submit</button>\n        </div>\n\n      </div>\n    </form>\n  </div>\n\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}